# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AFbWo-gjG2dRaUrk463u87Jt82KEE9hl
"""

import pandas as pd
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
import joblib

# Load the dataset
file_path = "E:/solarpowergeneration.csv"  # Path to your dataset
solar_data = pd.read_csv(file_path)

# Handle missing values
solar_data['average-wind-speed-(period)'].fillna(solar_data['average-wind-speed-(period)'].mean(), inplace=True)

# Define features (X) and target (y)
X = solar_data.drop(columns=['power-generated'])
y = solar_data['power-generated']

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Gradient Boosting Regressor
model = GradientBoostingRegressor(random_state=42)
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse:.2f}")
print(f"RÂ² Score: {r2:.2f}")

# Save the model
joblib.dump(model, "E:\ok\gradient_boosting_regressor_model.pkl")
print("Model saved as 'gradient_boosting_regressor_model.pkl'")

